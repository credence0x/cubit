// Calculates the most significant bit
fn msb(whole: u64) -> (u64, u64) {
    if whole < 256 {
        if whole < 2 { return (0, 1); }
        if whole < 4 { return (1, 2); }
        if whole < 8 { return (2, 4); }
        if whole < 16 { return (3, 8); }
        if whole < 32 { return (4, 16); }
        if whole < 64 { return (5, 32); }
        if whole < 128 { return (6, 64); }
        if whole < 256 { return (7, 128); }
    } else if whole < 65536 {
        if whole < 512 { return (8, 256); }
        if whole < 1024 { return (9, 512); }
        if whole < 2048 { return (10, 1024); }
        if whole < 4096 { return (11, 2048); }
        if whole < 8192 { return (12, 4096); }
        if whole < 16384 { return (13, 8192); }
        if whole < 32768 { return (14, 16384); }
        if whole < 65536 { return (15, 32768); }
    } else if whole < 16777216 {
        if whole < 131072 { return (16, 65536); }
        if whole < 262144 { return (17, 131072); }
        if whole < 524288 { return (18, 262144); }
        if whole < 1048576 { return (19, 524288); }
        if whole < 2097152 { return (20, 1048576); }
        if whole < 4194304 { return (21, 2097152); }
        if whole < 8388608 { return (22, 4194304); }
        if whole < 16777216 { return (23, 8388608); }
    } else if whole < 4294967296 {
        if whole < 33554432 { return (24, 16777216); }
        if whole < 67108864 { return (25, 33554432); }
        if whole < 134217728 { return (26, 67108864); }
        if whole < 268435456 { return (27, 134217728); }
        if whole < 536870912 { return (28, 268435456); }
        if whole < 1073741824 { return (29, 536870912); }
        if whole < 2147483648 { return (30, 1073741824); }
        if whole < 4294967296 { return (31, 2147483648); }
    }

    return (32, 4294967296);
}

fn exp2(exp: u64) -> u64 {
    if exp <= 16 {
        if exp == 0 { return 1; }
        if exp == 1 { return 2; }
        if exp == 2 { return 4; }
        if exp == 3 { return 8; }
        if exp == 4 { return 16; }
        if exp == 5 { return 32; }
        if exp == 6 { return 64; }
        if exp == 7 { return 128; }
        if exp == 8 { return 256; }
        if exp == 9 { return 512; }
        if exp == 10 { return 1024; }
        if exp == 11 { return 2048; }
        if exp == 12 { return 4096; }
        if exp == 13 { return 8192; }
        if exp == 14 { return 16384; }
        if exp == 15 { return 32768; }
        if exp == 16 { return 65536; }
    } else if exp <= 32 {
        if exp == 17 { return 131072; }
        if exp == 18 { return 262144; }
        if exp == 19 { return 524288; }
        if exp == 20 { return 1048576; }
        if exp == 21 { return 2097152; }
        if exp == 22 { return 4194304; }
        if exp == 23 { return 8388608; }
        if exp == 24 { return 16777216; }
        if exp == 25 { return 33554432; }
        if exp == 26 { return 67108864; }
        if exp == 27 { return 134217728; }
        if exp == 28 { return 268435456; }
        if exp == 29 { return 536870912; }
        if exp == 30 { return 1073741824; }
        if exp == 31 { return 2147483648; }
    }

    return 4294967296;
}

fn sin(a: u64) -> (u64, u64, u64) {
    let slot = a / 26353589;

    if slot < 128 {
        if slot < 64 {
            if slot < 32 {
                if slot < 16 {
    if slot == 0 { return (0, 0, 26353424); }
    if slot == 1 { return (26353589, 26353424, 52705856); }
    if slot == 2 { return (52707179, 52705856, 79056303); }
    if slot == 3 { return (79060768, 79056303, 105403774); }
    if slot == 4 { return (105414357, 105403774, 131747276); }
    if slot == 5 { return (131767946, 131747276, 158085819); }
    if slot == 6 { return (158121536, 158085819, 184418409); }
    if slot == 7 { return (184475125, 184418409, 210744057); }
    if slot == 8 { return (210828714, 210744057, 237061769); }
    if slot == 9 { return (237182303, 237061769, 263370557); }
    if slot == 10 { return (263535893, 263370557, 289669429); }
    if slot == 11 { return (289889482, 289669429, 315957395); }
    if slot == 12 { return (316243071, 315957395, 342233465); }
    if slot == 13 { return (342596660, 342233465, 368496651); }
    if slot == 14 { return (368950250, 368496651, 394745962); }
    if slot == 15 { return (395303839, 394745962, 420980412); }
                } else {
    if slot == 16 { return (421657428, 420980412, 447199012); }
    if slot == 17 { return (448011018, 447199012, 473400776); }
    if slot == 18 { return (474364607, 473400776, 499584716); }
    if slot == 19 { return (500718196, 499584716, 525749847); }
    if slot == 20 { return (527071785, 525749847, 551895183); }
    if slot == 21 { return (553425375, 551895183, 578019742); }
    if slot == 22 { return (579778964, 578019742, 604122538); }
    if slot == 23 { return (606132553, 604122538, 630202589); }
    if slot == 24 { return (632486142, 630202589, 656258914); }
    if slot == 25 { return (658839732, 656258914, 682290530); }
    if slot == 26 { return (685193321, 682290530, 708296459); }
    if slot == 27 { return (711546910, 708296459, 734275721); }
    if slot == 28 { return (737900499, 734275721, 760227338); }
    if slot == 29 { return (764254089, 760227338, 786150333); }
    if slot == 30 { return (790607678, 786150333, 812043729); }
    if slot == 31 { return (816961267, 812043729, 837906553); }
                }
            } else {
                if slot < 48 {
    if slot == 32 { return (843314857, 837906553, 863737830); }
    if slot == 33 { return (869668446, 863737830, 889536587); }
    if slot == 34 { return (896022035, 889536587, 915301854); }
    if slot == 35 { return (922375624, 915301854, 941032661); }
    if slot == 36 { return (948729214, 941032661, 966728038); }
    if slot == 37 { return (975082803, 966728038, 992387019); }
    if slot == 38 { return (1001436392, 992387019, 1018008636); }
    if slot == 39 { return (1027789981, 1018008636, 1043591926); }
    if slot == 40 { return (1054143571, 1043591926, 1069135926); }
    if slot == 41 { return (1080497160, 1069135926, 1094639673); }
    if slot == 42 { return (1106850749, 1094639673, 1120102207); }
    if slot == 43 { return (1133204338, 1120102207, 1145522571); }
    if slot == 44 { return (1159557928, 1145522571, 1170899806); }
    if slot == 45 { return (1185911517, 1170899806, 1196232957); }
    if slot == 46 { return (1212265106, 1196232957, 1221521071); }
    if slot == 47 { return (1238618696, 1221521071, 1246763195); }
                } else {
    if slot == 48 { return (1264972285, 1246763195, 1271958380); }
    if slot == 49 { return (1291325874, 1271958380, 1297105676); }
    if slot == 50 { return (1317679463, 1297105676, 1322204136); }
    if slot == 51 { return (1344033053, 1322204136, 1347252816); }
    if slot == 52 { return (1370386642, 1347252816, 1372250773); }
    if slot == 53 { return (1396740231, 1372250773, 1397197066); }
    if slot == 54 { return (1423093820, 1397197066, 1422090755); }
    if slot == 55 { return (1449447410, 1422090755, 1446930903); }
    if slot == 56 { return (1475800999, 1446930903, 1471716574); }
    if slot == 57 { return (1502154588, 1471716574, 1496446837); }
    if slot == 58 { return (1528508177, 1496446837, 1521120759); }
    if slot == 59 { return (1554861767, 1521120759, 1545737412); }
    if slot == 60 { return (1581215356, 1545737412, 1570295869); }
    if slot == 61 { return (1607568945, 1570295869, 1594795204); }
    if slot == 62 { return (1633922535, 1594795204, 1619234497); }
    if slot == 63 { return (1660276124, 1619234497, 1643612827); }
                }
            }
        } else {
            if slot < 96 {
                if slot < 80 {
    if slot == 64 { return (1686629713, 1643612827, 1667929275); }
    if slot == 65 { return (1712983302, 1667929275, 1692182927); }
    if slot == 66 { return (1739336892, 1692182927, 1716372869); }
    if slot == 67 { return (1765690481, 1716372869, 1740498191); }
    if slot == 68 { return (1792044070, 1740498191, 1764557983); }
    if slot == 69 { return (1818397659, 1764557983, 1788551342); }
    if slot == 70 { return (1844751249, 1788551342, 1812477362); }
    if slot == 71 { return (1871104838, 1812477362, 1836335144); }
    if slot == 72 { return (1897458427, 1836335144, 1860123788); }
    if slot == 73 { return (1923812016, 1860123788, 1883842400); }
    if slot == 74 { return (1950165606, 1883842400, 1907490086); }
    if slot == 75 { return (1976519195, 1907490086, 1931065957); }
    if slot == 76 { return (2002872784, 1931065957, 1954569124); }
    if slot == 77 { return (2029226374, 1954569124, 1977998702); }
    if slot == 78 { return (2055579963, 1977998702, 2001353810); }
    if slot == 79 { return (2081933552, 2001353810, 2024633568); }
                } else {
    if slot == 80 { return (2108287141, 2024633568, 2047837100); }
    if slot == 81 { return (2134640731, 2047837100, 2070963532); }
    if slot == 82 { return (2160994320, 2070963532, 2094011993); }
    if slot == 83 { return (2187347909, 2094011993, 2116981616); }
    if slot == 84 { return (2213701498, 2116981616, 2139871536); }
    if slot == 85 { return (2240055088, 2139871536, 2162680890); }
    if slot == 86 { return (2266408677, 2162680890, 2185408821); }
    if slot == 87 { return (2292762266, 2185408821, 2208054473); }
    if slot == 88 { return (2319115855, 2208054473, 2230616993); }
    if slot == 89 { return (2345469445, 2230616993, 2253095531); }
    if slot == 90 { return (2371823034, 2253095531, 2275489241); }
    if slot == 91 { return (2398176623, 2275489241, 2297797281); }
    if slot == 92 { return (2424530213, 2297797281, 2320018810); }
    if slot == 93 { return (2450883802, 2320018810, 2342152991); }
    if slot == 94 { return (2477237391, 2342152991, 2364198992); }
    if slot == 95 { return (2503590980, 2364198992, 2386155981); }
                }
            } else {
                if slot < 112 {
    if slot == 96 { return (2529944570, 2386155981, 2408023134); }
    if slot == 97 { return (2556298159, 2408023134, 2429799626); }
    if slot == 98 { return (2582651748, 2429799626, 2451484637); }
    if slot == 99 { return (2609005337, 2451484637, 2473077351); }
    if slot == 100 { return (2635358927, 2473077351, 2494576955); }
    if slot == 101 { return (2661712516, 2494576955, 2515982640); }
    if slot == 102 { return (2688066105, 2515982640, 2537293599); }
    if slot == 103 { return (2714419694, 2537293599, 2558509031); }
    if slot == 104 { return (2740773284, 2558509031, 2579628136); }
    if slot == 105 { return (2767126873, 2579628136, 2600650120); }
    if slot == 106 { return (2793480462, 2600650120, 2621574191); }
    if slot == 107 { return (2819834052, 2621574191, 2642399561); }
    if slot == 108 { return (2846187641, 2642399561, 2663125446); }
    if slot == 109 { return (2872541230, 2663125446, 2683751066); }
    if slot == 110 { return (2898894819, 2683751066, 2704275644); }
    if slot == 111 { return (2925248409, 2704275644, 2724698408); }
                } else {
    if slot == 112 { return (2951601998, 2724698408, 2745018589); }
    if slot == 113 { return (2977955587, 2745018589, 2765235421); }
    if slot == 114 { return (3004309176, 2765235421, 2785348143); }
    if slot == 115 { return (3030662766, 2785348143, 2805355999); }
    if slot == 116 { return (3057016355, 2805355999, 2825258235); }
    if slot == 117 { return (3083369944, 2825258235, 2845054101); }
    if slot == 118 { return (3109723533, 2845054101, 2864742853); }
    if slot == 119 { return (3136077123, 2864742853, 2884323748); }
    if slot == 120 { return (3162430712, 2884323748, 2903796051); }
    if slot == 121 { return (3188784301, 2903796051, 2923159027); }
    if slot == 122 { return (3215137891, 2923159027, 2942411948); }
    if slot == 123 { return (3241491480, 2942411948, 2961554089); }
    if slot == 124 { return (3267845069, 2961554089, 2980584729); }
    if slot == 125 { return (3294198658, 2980584729, 2999503152); }
    if slot == 126 { return (3320552248, 2999503152, 3018308645); }
    if slot == 127 { return (3346905837, 3018308645, 3037000500); }
                }
            }
        }
    } else {
        if slot < 192 {
            if slot < 160 {
                if slot < 144 {
    if slot == 128 { return (3373259426, 3037000500, 3055578014); }
    if slot == 129 { return (3399613015, 3055578014, 3074040487); }
    if slot == 130 { return (3425966605, 3074040487, 3092387225); }
    if slot == 131 { return (3452320194, 3092387225, 3110617535); }
    if slot == 132 { return (3478673783, 3110617535, 3128730733); }
    if slot == 133 { return (3505027372, 3128730733, 3146726136); }
    if slot == 134 { return (3531380962, 3146726136, 3164603066); }
    if slot == 135 { return (3557734551, 3164603066, 3182360851); }
    if slot == 136 { return (3584088140, 3182360851, 3199998822); }
    if slot == 137 { return (3610441730, 3199998822, 3217516315); }
    if slot == 138 { return (3636795319, 3217516315, 3234912670); }
    if slot == 139 { return (3663148908, 3234912670, 3252187232); }
    if slot == 140 { return (3689502497, 3252187232, 3269339351); }
    if slot == 141 { return (3715856087, 3269339351, 3286368382); }
    if slot == 142 { return (3742209676, 3286368382, 3303273682); }
    if slot == 143 { return (3768563265, 3303273682, 3320054617); }
                } else {
    if slot == 144 { return (3794916854, 3320054617, 3336710553); }
    if slot == 145 { return (3821270444, 3336710553, 3353240863); }
    if slot == 146 { return (3847624033, 3353240863, 3369644927); }
    if slot == 147 { return (3873977622, 3369644927, 3385922125); }
    if slot == 148 { return (3900331211, 3385922125, 3402071844); }
    if slot == 149 { return (3926684801, 3402071844, 3418093478); }
    if slot == 150 { return (3953038390, 3418093478, 3433986423); }
    if slot == 151 { return (3979391979, 3433986423, 3449750080); }
    if slot == 152 { return (4005745569, 3449750080, 3465383855); }
    if slot == 153 { return (4032099158, 3465383855, 3480887161); }
    if slot == 154 { return (4058452747, 3480887161, 3496259414); }
    if slot == 155 { return (4084806336, 3496259414, 3511500034); }
    if slot == 156 { return (4111159926, 3511500034, 3526608449); }
    if slot == 157 { return (4137513515, 3526608449, 3541584088); }
    if slot == 158 { return (4163867104, 3541584088, 3556426389); }
    if slot == 159 { return (4190220693, 3556426389, 3571134792); }
                }
            } else {
                if slot < 176 {
    if slot == 160 { return (4216574283, 3571134792, 3585708745); }
    if slot == 161 { return (4242927872, 3585708745, 3600147697); }
    if slot == 162 { return (4269281461, 3600147697, 3614451106); }
    if slot == 163 { return (4295635050, 3614451106, 3628618433); }
    if slot == 164 { return (4321988640, 3628618433, 3642649144); }
    if slot == 165 { return (4348342229, 3642649144, 3656542712); }
    if slot == 166 { return (4374695818, 3656542712, 3670298613); }
    if slot == 167 { return (4401049408, 3670298613, 3683916329); }
    if slot == 168 { return (4427402997, 3683916329, 3697395348); }
    if slot == 169 { return (4453756586, 3697395348, 3710735162); }
    if slot == 170 { return (4480110175, 3710735162, 3723935269); }
    if slot == 171 { return (4506463765, 3723935269, 3736995171); }
    if slot == 172 { return (4532817354, 3736995171, 3749914379); }
    if slot == 173 { return (4559170943, 3749914379, 3762692404); }
    if slot == 174 { return (4585524532, 3762692404, 3775328765); }
    if slot == 175 { return (4611878122, 3775328765, 3787822988); }
                } else {
    if slot == 176 { return (4638231711, 3787822988, 3800174601); }
    if slot == 177 { return (4664585300, 3800174601, 3812383140); }
    if slot == 178 { return (4690938889, 3812383140, 3824448145); }
    if slot == 179 { return (4717292479, 3824448145, 3836369162); }
    if slot == 180 { return (4743646068, 3836369162, 3848145741); }
    if slot == 181 { return (4769999657, 3848145741, 3859777440); }
    if slot == 182 { return (4796353247, 3859777440, 3871263820); }
    if slot == 183 { return (4822706836, 3871263820, 3882604450); }
    if slot == 184 { return (4849060425, 3882604450, 3893798902); }
    if slot == 185 { return (4875414014, 3893798902, 3904846754); }
    if slot == 186 { return (4901767604, 3904846754, 3915747591); }
    if slot == 187 { return (4928121193, 3915747591, 3926501002); }
    if slot == 188 { return (4954474782, 3926501002, 3937106583); }
    if slot == 189 { return (4980828371, 3937106583, 3947563934); }
    if slot == 190 { return (5007181961, 3947563934, 3957872662); }
    if slot == 191 { return (5033535550, 3957872662, 3968032378); }
                }
            }
        } else {
            if slot < 224 {
                if slot < 208 {
    if slot == 192 { return (5059889139, 3968032378, 3978042699); }
    if slot == 193 { return (5086242728, 3978042699, 3987903250); }
    if slot == 194 { return (5112596318, 3987903250, 3997613658); }
    if slot == 195 { return (5138949907, 3997613658, 4007173558); }
    if slot == 196 { return (5165303496, 4007173558, 4016582591); }
    if slot == 197 { return (5191657086, 4016582591, 4025840401); }
    if slot == 198 { return (5218010675, 4025840401, 4034946641); }
    if slot == 199 { return (5244364264, 4034946641, 4043900968); }
    if slot == 200 { return (5270717853, 4043900968, 4052703044); }
    if slot == 201 { return (5297071443, 4052703044, 4061352537); }
    if slot == 202 { return (5323425032, 4061352537, 4069849124); }
    if slot == 203 { return (5349778621, 4069849124, 4078192482); }
    if slot == 204 { return (5376132210, 4078192482, 4086382299); }
    if slot == 205 { return (5402485800, 4086382299, 4094418266); }
    if slot == 206 { return (5428839389, 4094418266, 4102300081); }
    if slot == 207 { return (5455192978, 4102300081, 4110027446); }
                } else {
    if slot == 208 { return (5481546567, 4110027446, 4117600071); }
    if slot == 209 { return (5507900157, 4117600071, 4125017671); }
    if slot == 210 { return (5534253746, 4125017671, 4132279966); }
    if slot == 211 { return (5560607335, 4132279966, 4139386683); }
    if slot == 212 { return (5586960925, 4139386683, 4146337555); }
    if slot == 213 { return (5613314514, 4146337555, 4153132319); }
    if slot == 214 { return (5639668103, 4153132319, 4159770720); }
    if slot == 215 { return (5666021692, 4159770720, 4166252509); }
    if slot == 216 { return (5692375282, 4166252509, 4172577440); }
    if slot == 217 { return (5718728871, 4172577440, 4178745276); }
    if slot == 218 { return (5745082460, 4178745276, 4184755784); }
    if slot == 219 { return (5771436049, 4184755784, 4190608739); }
    if slot == 220 { return (5797789639, 4190608739, 4196303920); }
    if slot == 221 { return (5824143228, 4196303920, 4201841112); }
    if slot == 222 { return (5850496817, 4201841112, 4207220108); }
    if slot == 223 { return (5876850406, 4207220108, 4212440704); }
                }
            } else {
                if slot < 240 {
    if slot == 224 { return (5903203996, 4212440704, 4217502704); }
    if slot == 225 { return (5929557585, 4217502704, 4222405917); }
    if slot == 226 { return (5955911174, 4222405917, 4227150159); }
    if slot == 227 { return (5982264764, 4227150159, 4231735252); }
    if slot == 228 { return (6008618353, 4231735252, 4236161021); }
    if slot == 229 { return (6034971942, 4236161021, 4240427302); }
    if slot == 230 { return (6061325531, 4240427302, 4244533933); }
    if slot == 231 { return (6087679121, 4244533933, 4248480760); }
    if slot == 232 { return (6114032710, 4248480760, 4252267634); }
    if slot == 233 { return (6140386299, 4252267634, 4255894413); }
    if slot == 234 { return (6166739888, 4255894413, 4259360959); }
    if slot == 235 { return (6193093478, 4259360959, 4262667143); }
    if slot == 236 { return (6219447067, 4262667143, 4265812840); }
    if slot == 237 { return (6245800656, 4265812840, 4268797931); }
    if slot == 238 { return (6272154245, 4268797931, 4271622305); }
    if slot == 239 { return (6298507835, 4271622305, 4274285855); }
                } else {
    if slot == 240 { return (6324861424, 4274285855, 4276788480); }
    if slot == 241 { return (6351215013, 4276788480, 4279130086); }
    if slot == 242 { return (6377568603, 4279130086, 4281310585); }
    if slot == 243 { return (6403922192, 4281310585, 4283329896); }
    if slot == 244 { return (6430275781, 4283329896, 4285187942); }
    if slot == 245 { return (6456629370, 4285187942, 4286884652); }
    if slot == 246 { return (6482982960, 4286884652, 4288419964); }
    if slot == 247 { return (6509336549, 4288419964, 4289793820); }
    if slot == 248 { return (6535690138, 4289793820, 4291006167); }
    if slot == 249 { return (6562043727, 4291006167, 4292056960); }
    if slot == 250 { return (6588397317, 4292056960, 4292946160); }
    if slot == 251 { return (6614750906, 4292946160, 4293673732); }
    if slot == 252 { return (6641104495, 4293673732, 4294239650); }
    if slot == 253 { return (6667458084, 4294239650, 4294643893); }
    if slot == 254 { return (6693811674, 4294643893, 4294886444); }
                }
            }
        }
    }

    return (6720165263, 4294886444, 4294967296);
}

fn atan(a: u64) -> (u64, u64, u64) {
    let slot = a / 30064771;

if slot == 0 { return (0, 0, 30064280); }
if slot == 1 { return (30064771, 30064280, 60125614); }
if slot == 2 { return (60129542, 60125614, 90181058); }
if slot == 3 { return (90194313, 90181058, 120227671); }
if slot == 4 { return (120259084, 120227671, 150262518); }
if slot == 5 { return (150323855, 150262518, 180282670); }
if slot == 6 { return (180388626, 180282670, 210285207); }
if slot == 7 { return (210453398, 210285207, 240267219); }
if slot == 8 { return (240518169, 240267219, 270225809); }
if slot == 9 { return (270582940, 270225809, 300158091); }
if slot == 10 { return (300647711, 300158091, 330061199); }
if slot == 11 { return (330712482, 330061199, 359932279); }
if slot == 12 { return (360777253, 359932279, 389768499); }
if slot == 13 { return (390842024, 389768499, 419567044); }
if slot == 14 { return (420906795, 419567044, 449325123); }
if slot == 15 { return (450971566, 449325123, 479039968); }
if slot == 16 { return (481036337, 479039968, 508708834); }
if slot == 17 { return (511101108, 508708834, 538329004); }
if slot == 18 { return (541165879, 538329004, 567897786); }
if slot == 19 { return (571230650, 567897786, 597412520); }
if slot == 20 { return (601295421, 597412520, 626870573); }
if slot == 21 { return (631360193, 626870573, 656269345); }
if slot == 22 { return (661424964, 656269345, 685606269); }
if slot == 23 { return (691489735, 685606269, 714878810); }
if slot == 24 { return (721554506, 714878810, 744084472); }
if slot == 25 { return (751619277, 744084472, 773220790); }
if slot == 26 { return (781684048, 773220790, 802285339); }
if slot == 27 { return (811748819, 802285339, 831275734); }
if slot == 28 { return (841813590, 831275734, 860189625); }
if slot == 29 { return (871878361, 860189625, 889024705); }
if slot == 30 { return (901943132, 889024705, 917778707); }
if slot == 31 { return (932007903, 917778707, 946449406); }
if slot == 32 { return (962072674, 946449406, 975034620); }
if slot == 33 { return (992137445, 975034620, 1003532209); }
if slot == 34 { return (1022202216, 1003532209, 1031940079); }
if slot == 35 { return (1052266988, 1031940079, 1060256178); }
if slot == 36 { return (1082331759, 1060256178, 1088478502); }
if slot == 37 { return (1112396530, 1088478502, 1116605090); }
if slot == 38 { return (1142461301, 1116605090, 1144634029); }
if slot == 39 { return (1172526072, 1144634029, 1172563451); }
if slot == 40 { return (1202590843, 1172563451, 1200391537); }
if slot == 41 { return (1232655614, 1200391537, 1228116512); }
if slot == 42 { return (1262720385, 1228116512, 1255736652); }
if slot == 43 { return (1292785156, 1255736652, 1283250279); }
if slot == 44 { return (1322849927, 1283250279, 1310655762); }
if slot == 45 { return (1352914698, 1310655762, 1337951519); }
if slot == 46 { return (1382979469, 1337951519, 1365136018); }
if slot == 47 { return (1413044240, 1365136018, 1392207771); }
if slot == 48 { return (1443109011, 1392207771, 1419165341); }
if slot == 49 { return (1473173783, 1419165341, 1446007339); }
if slot == 50 { return (1503238554, 1446007339, 1472732422); }
if slot == 51 { return (1533303325, 1472732422, 1499339299); }
if slot == 52 { return (1563368096, 1499339299, 1525826721); }
if slot == 53 { return (1593432867, 1525826721, 1552193491); }
if slot == 54 { return (1623497638, 1552193491, 1578438458); }
if slot == 55 { return (1653562409, 1578438458, 1604560517); }
if slot == 56 { return (1683627180, 1604560517, 1630558611); }
if slot == 57 { return (1713691951, 1630558611, 1656431729); }
if slot == 58 { return (1743756722, 1656431729, 1682178905); }
if slot == 59 { return (1773821493, 1682178905, 1707799220); }
if slot == 60 { return (1803886264, 1707799220, 1733291798); }
if slot == 61 { return (1833951035, 1733291798, 1758655812); }
if slot == 62 { return (1864015806, 1758655812, 1783890474); }
if slot == 63 { return (1894080578, 1783890474, 1808995043); }
if slot == 64 { return (1924145349, 1808995043, 1833968821); }
if slot == 65 { return (1954210120, 1833968821, 1858811150); }
if slot == 66 { return (1984274891, 1858811150, 1883521418); }
if slot == 67 { return (2014339662, 1883521418, 1908099052); }
if slot == 68 { return (2044404433, 1908099052, 1932543520); }
if slot == 69 { return (2074469204, 1932543520, 1956854330); }
if slot == 70 { return (2104533975, 1956854330, 1981031032); }
if slot == 71 { return (2134598746, 1981031032, 2005073211); }
if slot == 72 { return (2164663517, 2005073211, 2028980494); }
if slot == 73 { return (2194728288, 2028980494, 2052752544); }
if slot == 74 { return (2224793059, 2052752544, 2076389061); }
if slot == 75 { return (2254857830, 2076389061, 2099889781); }
if slot == 76 { return (2284922601, 2099889781, 2123254476); }
if slot == 77 { return (2314987373, 2123254476, 2146482953); }
if slot == 78 { return (2345052144, 2146482953, 2169575052); }
if slot == 79 { return (2375116915, 2169575052, 2192530648); }
if slot == 80 { return (2405181686, 2192530648, 2215349647); }
if slot == 81 { return (2435246457, 2215349647, 2238031989); }
if slot == 82 { return (2465311228, 2238031989, 2260577643); }
if slot == 83 { return (2495375999, 2260577643, 2282986611); }
if slot == 84 { return (2525440770, 2282986611, 2305258922); }
if slot == 85 { return (2555505541, 2305258922, 2327394635); }
if slot == 86 { return (2585570312, 2327394635, 2349393839); }
if slot == 87 { return (2615635083, 2349393839, 2371256649); }
if slot == 88 { return (2645699854, 2371256649, 2392983206); }
if slot == 89 { return (2675764625, 2392983206, 2414573679); }
if slot == 90 { return (2705829396, 2414573679, 2436028262); }
if slot == 91 { return (2735894168, 2436028262, 2457347172); }
if slot == 92 { return (2765958939, 2457347172, 2478530652); }
if slot == 93 { return (2796023710, 2478530652, 2499578968); }
if slot == 94 { return (2826088481, 2499578968, 2520492408); }
if slot == 95 { return (2856153252, 2520492408, 2541271281); }
if slot == 96 { return (2886218023, 2541271281, 2561915920); }
if slot == 97 { return (2916282794, 2561915920, 2582426676); }
if slot == 98 { return (2946347565, 2582426676, 2602803920); }

return (2976412336, 2602803920, 2623048044);
}
